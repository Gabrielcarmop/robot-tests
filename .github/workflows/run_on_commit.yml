name: Testes Automatizados com Robot + Gemini

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 8 * * *'   # Executa às 08:00 UTC (05:00 no Brasil)
    - cron: '0 20 * * *'  # Executa às 20:00 UTC (17:00 no Brasil)

jobs:
  executar-testes:
    runs-on: ubuntu-latest

    env:
      GEMINI_TOKEN: ${{ secrets.GEMINI_TOKEN }}
      MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      GITHUB_REPO: ${{ github.repository }}

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Instalar dependências Python
        run: |
          pip install --upgrade pip
          pip install robotframework robotframework-seleniumlibrary robotframework-requests requests

      - name: Instalar Chrome e ChromeDriver compatível
        run: |
          # Remover instalações antigas
          sudo apt-get remove -y google-chrome-stable || true
          sudo rm -f /usr/local/bin/chromedriver || true

          # Instalar dependências do sistema
          sudo apt-get update
          sudo apt-get install -y wget unzip curl xvfb

          # Instalar Chrome estável
          wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt-get install -y ./google-chrome-stable_current_amd64.deb
          rm google-chrome-stable_current_amd64.deb

          # Obter versão instalada do Chrome
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}')
          echo "Chrome instalado: $CHROME_VERSION"

          # Obter apenas o major version (ex: 136)
          CHROME_MAJOR_VERSION=$(echo $CHROME_VERSION | cut -d'.' -f1)

          # Buscar versão exata do ChromeDriver compatível
          DRIVER_VERSION=$(wget -qO- "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_MAJOR_VERSION")

          # Se falhar, usar a última versão disponível
          if [[ "$DRIVER_VERSION" == *"<Error>"* || -z "$DRIVER_VERSION" ]]; then
            echo "Fallback: usando última versão disponível do ChromeDriver"
            DRIVER_VERSION=$(wget -qO- https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          fi

          echo "ChromeDriver a ser instalado: $DRIVER_VERSION"

          wget -N https://chromedriver.storage.googleapis.com/$DRIVER_VERSION/chromedriver_linux64.zip -P ~/
          unzip -o ~/chromedriver_linux64.zip -d ~/
          sudo mv -f ~/chromedriver /usr/local/bin/chromedriver
          sudo chmod +x /usr/local/bin/chromedriver

      - name: Validar versões
        run: |
          google-chrome --version
          chromedriver --version

      - name: Executar testes com Robot Framework
        run: |
          mkdir -p results
          xvfb-run robot --outputdir results tests/

      - name: Fazer upload dos relatórios e screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: relatorio-testes
          path: results/